def line(katz_deli)
  if katz_deli == []
    puts "The line is currently empty."
  else 
    current_state_of_line = "The line is currently:"
    num_in_line = 1
    while num_in_line <= katz_deli.size
    current_state_of_line << " #{num_in_line}. #{katz_deli[num_in_line - 1]}"
    num_in_line += 1 
    end
    puts "#{current_state_of_line}" 
  end 
end


# using .each method, which is cleaner than .while:
def line(katz_deli)
  if katz_deli == [ ]
    puts "The line is currently empty."
  else 
    current_state_of_line = "The line is currently:"
    num_in_line = 1
    katz_deli.each do |name|
    current_state_of_line << " #{num_in_line}. #{katz_deli[num_in_line - 1]}"
    num_in_line += 1 
    end
    puts "#{current_state_of_line}" 
  end 
end


# Assuming that the first customer of each day will always take number 1; and that take_a_number_2 will get run each time that a new customer takes a number, I think the following ought to suffice:
num = 1
def take_a_number_2(katz_deli, new_name)
  katz_deli << new_name
  puts "You are number #{num}."
  num += 1
end